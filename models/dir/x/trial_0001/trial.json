{"trial_id": "0001", "hyperparameters": {"space": [{"class_name": "Choice", "config": {"name": "activation", "default": "relu", "conditions": [], "values": ["relu", "tanh"], "ordered": false}}, {"class_name": "Int", "config": {"name": "layer_1", "default": null, "conditions": [], "min_value": 1, "max_value": 1000, "step": 100, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "layer_2", "default": null, "conditions": [], "min_value": 1, "max_value": 1000, "step": 100, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "layer_3", "default": null, "conditions": [], "min_value": 1, "max_value": 1000, "step": 100, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.01, "conditions": [], "values": [0.01, 0.001, 0.0001], "ordered": true}}], "values": {"activation": "relu", "layer_1": 401, "layer_2": 901, "layer_3": 101, "learning_rate": 0.01, "tuner/epochs": 2, "tuner/initial_epoch": 0, "tuner/bracket": 2, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/Users/musaddique33/anaconda3/envs/comp30830/lib/python3.12/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/Users/musaddique33/anaconda3/envs/comp30830/lib/python3.12/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/musaddique33/anaconda3/envs/comp30830/lib/python3.12/site-packages/keras_tuner/src/tuners/hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/musaddique33/anaconda3/envs/comp30830/lib/python3.12/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/musaddique33/anaconda3/envs/comp30830/lib/python3.12/site-packages/keras_tuner/src/engine/tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/musaddique33/anaconda3/envs/comp30830/lib/python3.12/site-packages/keras_tuner/src/engine/hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/musaddique33/anaconda3/envs/comp30830/lib/python3.12/site-packages/keras/src/utils/traceback_utils.py\", line 123, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/Users/musaddique33/anaconda3/envs/comp30830/lib/python3.12/site-packages/keras/src/losses/losses.py\", line 1154, in mean_squared_error\n    return ops.mean(ops.square(y_true - y_pred), axis=-1)\n                               ~~~~~~~^~~~~~~~\nValueError: Dimensions must be equal, but are 2 and 10 for '{{node compile_loss/mse/sub}} = Sub[T=DT_FLOAT](data_1, sequential_1/dense_3_1/add)' with input shapes: [?,2], [?,10].\n"}